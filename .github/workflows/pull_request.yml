# when create a pull request, this workflow will run the unit test,
# download the code coverage report from the main branch's artifact,
# and compare the diff coverage between the current branch and the main branch with current branch's files and main branch's files.
# using pycobertura (https://github.com/aconrad/pycobertura) to compare the diff coverage.
# If the diff coverage is less than 80%, the workflow will fail.

name: Check diff coverage
on:
  pull_request:
    branches:
      - main

jobs:
  check-diff-coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/checkout@v4
        with:
          path: current
      - name: Install dependencies
        run: npm install
        working-directory: current
      - name: Run tests
        run: npm run test
        working-directory: current

      - uses: actions/checkout@v4
        with:
          ref: main
          path: main
      - name: Get the latest run_id of the main branch's code coverage
        id: get_run_id
        run: |
          run_id=$(curl -s -H "Accept: application/vnd.github.v3+json" -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/$GITHUB_REPOSITORY/actions/runs?branch=main | jq -r '.workflow_runs[0].id')
          echo run_id=$run_id >> $GITHUB_OUTPUT
      - name: Download code coverage report from main branch
        uses: actions/download-artifact@v4
        with:
          name: coverage
          run-id: ${{ steps.get_run_id.outputs.run_id }}
          github-token: ${{ github.token }}
      - name: Put main branch's code coverage report to main folder
        run: mkdir main/coverage && mv cobertura-coverage.xml main/coverage/cobertura-coverage.xml

      - name: Install pycobertura
        run: pip install pycobertura
      - name: Generate diff coverage file
        run: |
          pycobertura diff main/coverage/cobertura-coverage.xml current/coverage/cobertura-coverage.xml --source1 main --source2 current --format json --output diff-coverage.json || echo "exit code $?"
      - name: Publish diff coverage
        uses: actions/upload-artifact@v4
        with:
          name: diff-coverage
          path: diff-coverage.json
      - name: Check diff coverage.
        run: |
          diff_coverage=$(cat diff-coverage.json | jq -r '.diff_coverage')
          echo "diff coverage: $diff_coverage"
          if [ $(echo "$diff_coverage < 80" | bc) -eq 1 ]; then
            echo "diff coverage is less than 80%"
            exit 1
          fi
